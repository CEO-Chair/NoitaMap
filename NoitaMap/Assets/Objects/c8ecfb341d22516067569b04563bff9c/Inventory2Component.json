{"name":"Inventory2Component","base":"Component","fields":[{"offset":72,"comment":"","example_range_min":0,"example_range_max":30,"kind":"Members","default_value":"10","size":4,"raw_type":"int","type":"int","name":"quick_inventory_slots"},{"offset":76,"comment":"","example_range_min":0,"example_range_max":30,"kind":"Members","default_value":"8","size":4,"raw_type":"int","type":"int","name":"full_inventory_slots_x"},{"offset":80,"comment":"","example_range_min":0,"example_range_max":30,"kind":"Members","default_value":"8","size":4,"raw_type":"int","type":"int","name":"full_inventory_slots_y"},{"offset":84,"comment":"Used to retain active item across save/load. Don't touch this unless you know what you're doing!","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"uint32","type":"std::uint32_t","name":"mSavedActiveItemIndex"},{"offset":88,"comment":"NOTE: Don't attempt to directly change the value of this field via lua code. It will probably break the game logic in obvious or subtle ways.","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mActiveItem"},{"offset":92,"comment":"NOTE: Don't attempt to directly change the value of this field via lua code. It will probably break the game logic in obvious or subtle ways.","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mActualActiveItem"},{"offset":96,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mActiveStash"},{"offset":100,"comment":"Is used to store the item that is being thrown, instead of mActiveItem, since the player can switch items (mActiveItem) during the throwing animation","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mThrowItem"},{"offset":104,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mItemHolstered"},{"offset":105,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mInitialized"},{"offset":106,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mForceRefresh"},{"offset":107,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mDontLogNextItemEquip"},{"offset":108,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"float","type":"float","name":"mSmoothedItemXOffset"},{"offset":112,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mLastItemSwitchFrame"},{"offset":116,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"1","size":4,"raw_type":"float","type":"float","name":"mIntroEquipItemLerp"},{"offset":120,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"(0, 0)","size":8,"raw_type":"vec2","type":"vec2","name":"mSmoothedItemAngleVec"}]}