{"name":"LuaComponent","base":"Component","fields":[{"offset":72,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_source_file"},{"offset":96,"comment":"Do we share a single Lua virtual machine for everyone who runs 'script_source_file' ('SHARED_BY_MANY_COMPONENTS'), create one VM per one LuaComponent and reuse the VM in case the component runs the script multiple times ('ONE_PER_COMPONENT_INSTANCE'), or create a new VM every time the script is executed ('CREATE_NEW_EVERY_EXECUTION', deprecated)?","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"SHARED_BY_MANY_COMPONENTS","size":4,"raw_type":"LUA_VM_TYPE::Enum","type":"LUA_VM_TYPE::Enum","name":"vm_type"},{"offset":100,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"execute_on_added"},{"offset":101,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"execute_on_removed"},{"offset":104,"comment":"1 = execute every frame. 2 = execute every second frame. 3 = execute every third frame and so on. -1 = execute only on add/remove/event","example_range_min":1,"example_range_max":150,"kind":"Members","default_value":"1","size":4,"raw_type":"int","type":"int","name":"execute_every_n_frame"},{"offset":108,"comment":"How many times should the script be executed? < 1 means infinite","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"execute_times"},{"offset":112,"comment":"-1 = infinite. Use this to limit how many times this can be executed per frame. Currently only used to limit script_shot from being executed forever.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"limit_how_many_times_per_frame"},{"offset":116,"comment":"-1 = no limit. Currently only used to limit script_shot from being executed every frame.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"limit_to_every_n_frame"},{"offset":120,"comment":"NOTE( Petri ): 19.8.2023 - by default limit_how_many_times_per_frame and limit_to_every_n_frame only works for script_shot. If this is set to true, will limit all callbacks. Also note that this limit is shared within this component. So if this is true and both script_shot and script_damage_received and both are called within limit_to_every_n_frame frames, only one of them will be called.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"limit_all_callbacks"},{"offset":121,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"remove_after_executed"},{"offset":122,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"enable_coroutines"},{"offset":123,"comment":" if 1, calls function init( entity_id:int ) after running the code in the file scope of script_source_file along with all mod appends. Does nothing if execute_on_added is 0","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"call_init_function"},{"offset":124,"comment":"if set, calls function 'enabled_changed( entity_id:int, is_enabled:bool )' when the IsEnabled status of this LuaComponent is changed","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_enabled_changed"},{"offset":148,"comment":"if set, calls function 'damage_received( damage:number, message:string, entity_thats_responsible:int, is_fatal:bool, projectile_thats_responsible:int )' when we receive a message about damage (Message_DamageReceived)","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_damage_received"},{"offset":172,"comment":"if set, calls function 'damage_about_to_be_received( damage:number, x:number, y:number, entity_thats_responsible:int, critical_hit_chance:int )' when we receive a message (Message_DamageAboutToBeReceived) -> new_damage:number,new_critical_hit_chance:int","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_damage_about_to_be_received"},{"offset":196,"comment":"if set, calls function 'item_pickup( int entity_item, int entity_pickupper, string item_name )' when message 'Message_ItemPickUp' is called","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_item_picked_up"},{"offset":220,"comment":"if set, calls function 'shot( projectile_entity_id )' when we receive Message_Shot","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_shot"},{"offset":244,"comment":"if set, calls function 'collision_trigger( colliding_entity_id )' when we receive Message_CollisionTriggerHit","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_collision_trigger_hit"},{"offset":268,"comment":"if set, calls function 'collision_trigger_timer_finished()' when we receive Message_CollisionTriggerTimerFinished","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_collision_trigger_timer_finished"},{"offset":292,"comment":"if set, calls function 'physics_body_modified( is_destroyed )' when physics body has been modified","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_physics_body_modified"},{"offset":316,"comment":"if set, calls function 'pressure_plate_change( new_state )' when PressurePlateComponent decides that things have change","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_pressure_plate_change"},{"offset":340,"comment":"if set, calls function 'inhaled_material( material_name, count )' once per second for each inhaled material","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_inhaled_material"},{"offset":364,"comment":"if set, calls function 'death( int damage_type_bit_field, string damage_message, int entity_thats_responsible, bool drop_items )' when we receive message Message_Death","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_death"},{"offset":388,"comment":"if set, calls function 'throw_item( from_x, from_y, to_x, to_y )' when we receive message Message_ThrowItem","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_throw_item"},{"offset":412,"comment":"if set, calls function 'material_area_checker_failed( pos_x, pos_y, )' when we receive message Message_MaterialAreaCheckerFailed","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_material_area_checker_failed"},{"offset":436,"comment":"if set, calls function 'material_area_checker_success( pos_x, pos_y, )' when we receive message Message_MaterialAreaCheckerSuccess","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_material_area_checker_success"},{"offset":460,"comment":"if set, calls function 'electricity_receiver_switched( bool is_electrified )' when we receive message Message_ElectricityReceiverSwitched","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_electricity_receiver_switched"},{"offset":484,"comment":"if set, calls function 'electricity_receiver_electrified()' when we receive message Message_ElectricityReceiverElectrified","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_electricity_receiver_electrified"},{"offset":508,"comment":"if set, calls function 'kick( entity_who_kicked )' when we receive message Message_Kick","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_kick"},{"offset":532,"comment":"if set, calls function 'interacting( entity_who_interacted, entity_interacted, interactable_name )' when we receive message Message_Interaction","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_interacting"},{"offset":556,"comment":"if set, calls function 'audio_event_dead( bank_file, event_root )' when we receive message Message_AudioEventDead","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_audio_event_dead"},{"offset":580,"comment":"if set, calls function 'wand_fired( gun_entity_id )' when we receive Message_WandFired","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_wand_fired"},{"offset":604,"comment":"if set, calls function 'teleported( from_x, from_y, to_x, to_y, bool portal_teleport )' when we receive Message_Teleported","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_teleported"},{"offset":628,"comment":"if set, calls function 'portal_teleport_used( entity_that_was_teleported, from_x, from_y, to_x, to_y )' when we receive Message_PortalTeleportUsed","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_portal_teleport_used"},{"offset":652,"comment":"if set, calls function 'polymorphing_to( string_entity_we_are_about_to_polymorph_to )' when we receive Message_PolymorphingTo","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_polymorphing_to"},{"offset":676,"comment":"if set, calls function 'biome_entered( string_biome_name, string_biome_old_name )' when this entity changes biomes. Requires BiomeTrackerComponent","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"script_biome_entered"},{"offset":700,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"mLastExecutionFrame"},{"offset":704,"comment":"tracks how many times we've executed this frame. This will linger on and store the old value of the old frames. Used internally.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mTimesExecutedThisFrame"},{"offset":708,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mModAppendsDone"},{"offset":712,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"mNextExecutionTime"},{"offset":716,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mTimesExecuted"},{"offset":720,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"LuaManager*","type":"LuaManager*","name":"mLuaManager"},{"offset":724,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":8,"raw_type":"ValueMap","type":"ValueMap","name":"mPersistentValues"}]}