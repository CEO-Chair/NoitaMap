{"name":"PathFindingComponent","base":"Component","fields":[{"offset":72,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1e+006,"kind":"Members","default_value":"20","size":4,"raw_type":"int","type":"int","name":"search_depth_max_no_goal"},{"offset":76,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1e+006,"kind":"Members","default_value":"1500","size":4,"raw_type":"int","type":"int","name":"iterations_max_no_goal"},{"offset":80,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1e+006,"kind":"Members","default_value":"2500","size":4,"raw_type":"int","type":"int","name":"search_depth_max_with_goal"},{"offset":84,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1e+006,"kind":"Members","default_value":"1500","size":4,"raw_type":"int","type":"int","name":"iterations_max_with_goal"},{"offset":88,"comment":"TODO: Comment","example_range_min":0,"example_range_max":100000,"kind":"Members","default_value":"20","size":4,"raw_type":"float","type":"float","name":"cost_of_flying"},{"offset":92,"comment":"TODO: Comment","example_range_min":0,"example_range_max":200,"kind":"Members","default_value":"2","size":4,"raw_type":"int","type":"int","name":"distance_to_reach_node_x"},{"offset":96,"comment":"TODO: Comment","example_range_min":0,"example_range_max":200,"kind":"Members","default_value":"6","size":4,"raw_type":"int","type":"int","name":"distance_to_reach_node_y"},{"offset":100,"comment":"TODO: Comment","example_range_min":0,"example_range_max":600,"kind":"Members","default_value":"60","size":4,"raw_type":"int","type":"int","name":"frames_to_get_stuck"},{"offset":104,"comment":"TODO: Comment","example_range_min":0,"example_range_max":300,"kind":"Members","default_value":"30","size":4,"raw_type":"int","type":"int","name":"frames_between_searches"},{"offset":108,"comment":"TODO: Comment","example_range_min":-100,"example_range_max":100,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"y_walking_compensation"},{"offset":112,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"can_fly"},{"offset":113,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"can_walk"},{"offset":114,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"can_jump"},{"offset":115,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"can_dive"},{"offset":116,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"can_swim_on_surface"},{"offset":117,"comment":"if 1, we require a path to have an entity at the goal, having line of sight to the entity is not enough","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"never_consider_line_of_sight"},{"offset":120,"comment":"how far (in cells) must a point on our route be from the nearest wall to consider it passable?","example_range_min":0,"example_range_max":20,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"space_required"},{"offset":124,"comment":"TODO: Comment","example_range_min":0,"example_range_max":400,"kind":"Members","default_value":"400","size":4,"raw_type":"float","type":"float","name":"max_jump_distance_from_camera"},{"offset":128,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1000,"kind":"Members","default_value":"200","size":4,"raw_type":"float","type":"float","name":"jump_speed"},{"offset":132,"comment":"TODO: Comment","example_range_min":0,"example_range_max":5,"kind":"Members","default_value":"1","size":4,"raw_type":"float","type":"float","name":"initial_jump_lob"},{"offset":136,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1000,"kind":"Members","default_value":"100","size":4,"raw_type":"float","type":"float","name":"initial_jump_max_distance_x"},{"offset":140,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1000,"kind":"Members","default_value":"80","size":4,"raw_type":"float","type":"float","name":"initial_jump_max_distance_y"},{"offset":144,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"","size":12,"raw_type":"VECTOR_JUMPPARAMS","type":"VECTOR_JUMPPARAMS","name":"jump_trajectories"},{"offset":156,"comment":"Read only value to get mState as an integer. Used to detect when the worst cheesers are trying to cheese our beloved squidward.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"read_state"},{"offset":160,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":160,"raw_type":"PathFindingInput","type":"PathFindingInput","name":"input"},{"offset":320,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"MSG_QUEUE_PATH_FINDING_RESULT","type":"MSG_QUEUE_PATH_FINDING_RESULT","name":"job_result_receiver"},{"offset":324,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"waiting_for"},{"offset":328,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"next_search_frame"},{"offset":332,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":12,"raw_type":"VECTOR_PATHNODE","type":"VECTOR_PATHNODE","name":"path"},{"offset":344,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":20,"raw_type":"PathFindingResultNode","type":"PathFindingResultNode","name":"path_next_node"},{"offset":364,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"(0, 0)","size":8,"raw_type":"vec2","type":"vec2","name":"path_next_node_vector_to"},{"offset":372,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"float","type":"float","name":"path_next_node_distance_to"},{"offset":376,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":8,"raw_type":"PathFindingNodeHandle","type":"PathFindingNodeHandle","name":"path_previous_node"},{"offset":384,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"path_frames_stuck"},{"offset":388,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"path_is_stuck"},{"offset":392,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"path_last_frame_with_job"},{"offset":396,"comment":"this defines what is an acceptable path","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"PathFindingLogic*","type":"PathFindingLogic*","name":"mLogic"},{"offset":400,"comment":"we use this to define an acceptable path if mLogic doesn't return one","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"PathFindingLogic*","type":"PathFindingLogic*","name":"mFallbackLogic"},{"offset":404,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"PathFindingLogic*","type":"PathFindingLogic*","name":"mSelectedLogic"},{"offset":408,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mEnabled"},{"offset":412,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"PathFindingComponentState::Enum","type":"PathFindingComponentState::Enum","name":"mState"},{"offset":416,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mTimesStuck"},{"offset":420,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mNextClearDontApproachListFrame"},{"offset":424,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"float","type":"float","name":"mNodeProximityCheckCorrectionY"},{"offset":428,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":12,"raw_type":"VECTOR_PATHNODE","type":"VECTOR_PATHNODE","name":"debug_path"},{"offset":440,"comment":"TODO: Comment","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"[1.000000, 0.000000: -1]","size":12,"raw_type":"LensValue<float>","type":"LensValue<float>","name":"jump_velocity_multiplier"}]}