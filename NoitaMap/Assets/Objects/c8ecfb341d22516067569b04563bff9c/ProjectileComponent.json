{"name":"ProjectileComponent","base":"Component","fields":[{"offset":72,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"PROJECTILE","size":4,"raw_type":"PROJECTILE_TYPE::Enum","type":"PROJECTILE_TYPE::Enum","name":"projectile_type"},{"offset":76,"comment":"lifetime, -1 means it's endless, otherwise it's the frame count","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"lifetime"},{"offset":80,"comment":"final lifetime will be lifetime + random(-lifetime_randomness,lifetime_randomness)","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"lifetime_randomness"},{"offset":84,"comment":"when lifetime runs out, should we explode?","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_lifetime_out_explode"},{"offset":85,"comment":"true by default. Some projectiles you don't want to collide with the world, e.g. blackholes","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"collide_with_world"},{"offset":88,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Objects","default_value":"","size":572,"raw_type":"ConfigGunActionInfo","type":"ConfigGunActionInfo","name":"config"},{"offset":660,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"60","size":4,"raw_type":"float","type":"float","name":"speed_min"},{"offset":664,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"60","size":4,"raw_type":"float","type":"float","name":"speed_max"},{"offset":668,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"friction"},{"offset":672,"comment":"when fired, randomizes the velocity -this, this","example_range_min":0,"example_range_max":3.14151,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"direction_random_rad"},{"offset":676,"comment":"when fired, multiplies this with projectile_i and adds it to direction","example_range_min":-3.14,"example_range_max":3.14,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"direction_nonrandom_rad"},{"offset":680,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"0.5","size":4,"raw_type":"float","type":"float","name":"lob_min"},{"offset":684,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"0.8","size":4,"raw_type":"float","type":"float","name":"lob_max"},{"offset":688,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"camera_shake_when_shot"},{"offset":692,"comment":"","example_range_min":0,"example_range_max":60000,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"shoot_light_flash_radius"},{"offset":696,"comment":"","example_range_min":0,"example_range_max":255,"kind":"Members","default_value":"255","size":4,"raw_type":"unsigned int","type":"unsigned","name":"shoot_light_flash_r"},{"offset":700,"comment":"","example_range_min":0,"example_range_max":255,"kind":"Members","default_value":"180","size":4,"raw_type":"unsigned int","type":"unsigned","name":"shoot_light_flash_g"},{"offset":704,"comment":"","example_range_min":0,"example_range_max":255,"kind":"Members","default_value":"150","size":4,"raw_type":"unsigned int","type":"unsigned","name":"shoot_light_flash_b"},{"offset":708,"comment":"should we create shell casings?","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"create_shell_casing"},{"offset":712,"comment":"material of the shell casing","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"brass","size":24,"raw_type":"std::string","type":"std::string","name":"shell_casing_material"},{"offset":736,"comment":"where the shell casing will be created relative to projectile, y is flipped if projectile direction is to the left.","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"(0, 0)","size":8,"raw_type":"vec2","type":"vec2","name":"shell_casing_offset"},{"offset":744,"comment":"this entity is created along with the projectile, oriented along the projectile's path","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"muzzle_flash_file"},{"offset":768,"comment":"","example_range_min":0,"example_range_max":1e+008,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"bounces_left"},{"offset":772,"comment":"when bouncing, velocity is multiplied by this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0.5","size":4,"raw_type":"float","type":"float","name":"bounce_energy"},{"offset":776,"comment":"if true, will do a fake bounce if can't do the proper bounce, but will always try to bounce","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"bounce_always"},{"offset":777,"comment":"if true, will bounce at any reflection angle","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"bounce_at_any_angle"},{"offset":778,"comment":"if true, will attach to the projectile entity that created this projectile via a trigger","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"attach_to_parent_trigger"},{"offset":780,"comment":"this entity is created at the bounce position. it gets the bounce angle as rotation.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"bounce_fx_file"},{"offset":804,"comment":"this is only applied if velocity_sets_rotation == false","example_range_min":-3.1415,"example_range_max":3.1415,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"angular_velocity"},{"offset":808,"comment":"whether we set the rotation based on velocity, as in spear or if we update the rotation with angular_velocity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"velocity_sets_rotation"},{"offset":809,"comment":"if true, the sprite width is made equal to the distance traveled since last frame","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"velocity_sets_scale"},{"offset":812,"comment":"Larger value means velocity affects the scale more","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"1","size":4,"raw_type":"float","type":"float","name":"velocity_sets_scale_coeff"},{"offset":816,"comment":"if true, the sprite is flipped based on which side the projectile is currently traveling","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"velocity_sets_y_flip"},{"offset":820,"comment":"updates the animation based on far the sprite moved","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"velocity_updates_animation"},{"offset":824,"comment":"if > 0, this, along with VelocityComponent.mass affects how far we penetrate in materials","example_range_min":0,"example_range_max":5,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"ground_penetration_coeff"},{"offset":828,"comment":"if 0, will not penetrate into materials with durability greater than this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"ground_penetration_max_durability_to_destroy"},{"offset":832,"comment":"if set, we never collide with this material","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"go_through_this_material"},{"offset":856,"comment":"this should probably be true, to get normal projectile behaviour, but you might want to disable this for some physics-based projectiles, like bombs","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"do_moveto_update"},{"offset":860,"comment":"if greater than 0, the projectile creates two clones of itself on death. 'on_death_duplicate_remaining' on the clones is reduced by one","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"on_death_duplicate_remaining"},{"offset":864,"comment":"if true, finds all the sprites and leaves as sand cells into the grid","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"on_death_gfx_leave_sprite"},{"offset":865,"comment":"if true, does explosion with config_explosion","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_death_explode"},{"offset":866,"comment":"if true, emits on_death_emit_particle_type on death","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_death_emit_particle"},{"offset":868,"comment":"how many particles should we emit","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"1","size":4,"raw_type":"int","type":"int","name":"on_death_emit_particle_count"},{"offset":872,"comment":"if true, dies on collision with liquids","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"die_on_liquid_collision"},{"offset":873,"comment":"if true, dies when speed goes below die_on_low_velocity_limit","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"die_on_low_velocity"},{"offset":876,"comment":"please see die_on_low_velocity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"50","size":4,"raw_type":"float","type":"float","name":"die_on_low_velocity_limit"},{"offset":880,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"on_death_emit_particle_type"},{"offset":904,"comment":"if you want it to stick as concrete, you should enable this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_death_particle_check_concrete"},{"offset":905,"comment":"if 1, spurt some particles when colliding with mortals","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"ground_collision_fx"},{"offset":906,"comment":"if true, explosion doesn't damage the entity who shot this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"explosion_dont_damage_shooter"},{"offset":908,"comment":"if we have explosion, it's the setup for it","example_range_min":0,"example_range_max":1,"kind":"Objects","default_value":"","size":372,"raw_type":"ConfigExplosion","type":"ConfigExplosion","name":"config_explosion"},{"offset":1280,"comment":"if > 0, makes items closer than this radius pickable on death","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"on_death_item_pickable_radius"},{"offset":1284,"comment":"if true, the projectile doesn't collide with ground, liquids, physical objects etc","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"penetrate_world"},{"offset":1288,"comment":"if 'penetrate_world' is true, the projectile moves with a velocity multiplied by this value when inside world","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0.6","size":4,"raw_type":"float","type":"float","name":"penetrate_world_velocity_coeff"},{"offset":1292,"comment":"if true, the projectile doesn't stop when it collides with entities. damages each entity only once","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"penetrate_entities"},{"offset":1293,"comment":"if true, this is killed as soon as it hits the ground","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"on_collision_die"},{"offset":1294,"comment":"if true, ProjectileComponent is removed from the entitiy","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_collision_remove_projectile"},{"offset":1295,"comment":"if true, spawns the spawn_entity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"on_collision_spawn_entity"},{"offset":1296,"comment":"this is spawned if hit something an on_collision_spawn_entity = 1","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"spawn_entity"},{"offset":1320,"comment":"if true, will use ShootProjectile instead of LoadEntity()","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"spawn_entity_is_projectile"},{"offset":1324,"comment":"projectile applies an impulse to physics bodies it hits. Impulse = physics_impulse_coeff * velocity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"300","size":4,"raw_type":"float","type":"float","name":"physics_impulse_coeff"},{"offset":1328,"comment":"if set != -1, will only do damage every x frames, used for fields and such, which would otherwise do damage every frame","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"damage_every_x_frames"},{"offset":1332,"comment":"if 1, damage is multiplied by (projectile speed / original projectile speed) ratio","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"damage_scaled_by_speed"},{"offset":1336,"comment":"if > 0 and damage_scaled_by_speed = 1, will use this instead of mInitialSpeed when calculating the damage","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"damage_scale_max_speed"},{"offset":1340,"comment":"if not NORMAL, do a special ragdoll","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"NORMAL","size":4,"raw_type":"RAGDOLL_FX::Enum","type":"RAGDOLL_FX::Enum","name":"ragdoll_fx_on_collision"},{"offset":1344,"comment":"if 1, looks for entities with tag, collide_with_tag and collides with them, giving them damage","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"collide_with_entities"},{"offset":1348,"comment":"default: mortal, if you needed can be changed to something more specific","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"hittable","size":24,"raw_type":"std::string","type":"std::string","name":"collide_with_tag"},{"offset":1372,"comment":"if set will ignore entities with this tag","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"dont_collide_with_tag"},{"offset":1396,"comment":"remember friendly_fire 1, if -1 won't collide with shooter at all, otherwise uses the value as frame count and while it's running won't damage the shooter ","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1","size":4,"raw_type":"int","type":"int","name":"collide_with_shooter_frames"},{"offset":1400,"comment":"if true, will damage same herd id","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"friendly_fire"},{"offset":1404,"comment":"how much Projectile damage does this do when it hits something","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"1","size":4,"raw_type":"float","type":"float","name":"damage"},{"offset":1408,"comment":"the amounts of different types of damage this does","example_range_min":0,"example_range_max":1,"kind":"Objects","default_value":"","size":64,"raw_type":"ConfigDamagesByType","type":"ConfigDamagesByType","name":"damage_by_type"},{"offset":1472,"comment":"config for critical hit","example_range_min":0,"example_range_max":1,"kind":"Objects","default_value":"","size":16,"raw_type":"ConfigDamageCritical","type":"ConfigDamageCritical","name":"damage_critical"},{"offset":1488,"comment":"How far do entities get thrown if a knockback occurs. final_knockback = ProjectileComponent.knockback_force * VelocityComponent.mVelocity * VelocityComponent.mass / who_we_hit.mass","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"knockback_force"},{"offset":1492,"comment":"velocity * ragdoll_force_multiplier is applied to any ragdolls that are created by entities killed by this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0.025","size":4,"raw_type":"float","type":"float","name":"ragdoll_force_multiplier"},{"offset":1496,"comment":"hit particle velocity = projectile_velocity * hit_particle_force_multiplier * some randomness","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0.1","size":4,"raw_type":"float","type":"float","name":"hit_particle_force_multiplier"},{"offset":1500,"comment":"how much blood does this projectile cause","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"1","size":4,"raw_type":"float","type":"float","name":"blood_count_multiplier"},{"offset":1504,"comment":"a list of game_effects entities separated with ','. e.g. 'data/entities/misc/effect_electrocution.xml,data/entities/misc/effect_on_fire.xml' ","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"","size":24,"raw_type":"std::string","type":"std::string","name":"damage_game_effect_entities"},{"offset":1528,"comment":"If 1, does not hit player no matter what herds this and player belong to","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"never_hit_player"},{"offset":1529,"comment":"if 1, looks up the 'who_shot' entity and its MaterialInventoryComponent on destruction and updates it based on the cells destroyed on our explosion.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"collect_materials_to_shooter"},{"offset":1532,"comment":"entity (creature) that shot this","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mWhoShot"},{"offset":1536,"comment":"used for stats","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityTypeID","type":"EntityTypeID","name":"mWhoShotEntityTypeID"},{"offset":1540,"comment":"the herdid of mWhoShot, unless friendly fire","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mShooterHerdId"},{"offset":1544,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mStartingLifetime"},{"offset":1548,"comment":"for triggers, if shot from a trigger this should point to the projectile entity that shot this. Otherwise this should be the same as mWhoShot. NOTE! Not really tested properly so might break.","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"EntityID","type":"EntityID","name":"mEntityThatShot"},{"offset":1552,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":36,"raw_type":"ProjectileTriggers","type":"ProjectileTriggers","name":"mTriggers"},{"offset":1588,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"play_damage_sounds"},{"offset":1592,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"-1024","size":4,"raw_type":"int","type":"int","name":"mLastFrameDamaged"},{"offset":1596,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":12,"raw_type":"VEC_ENTITY","type":"VEC_ENTITY","name":"mDamagedEntities"},{"offset":1608,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"-1","size":4,"raw_type":"float","type":"float","name":"mInitialSpeed"}]}