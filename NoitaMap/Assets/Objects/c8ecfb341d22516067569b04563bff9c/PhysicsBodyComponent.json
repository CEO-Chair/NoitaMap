{"name":"PhysicsBodyComponent","base":"Component","fields":[{"offset":72,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":4,"raw_type":"b2Body*","type":"b2Body*","name":"mBody"},{"offset":80,"comment":"this is mBody->GetBodyId() - not to be confused with uid shit, has to be tracked separately, since the mBody pointer is not unique","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":8,"raw_type":"b2ObjectID","type":"b2ObjectID","name":"mBodyId"},{"offset":88,"comment":"if mBody is set from outside, will ignore all the things","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"is_external"},{"offset":89,"comment":"if set will lift the body upwards if it is inside ground","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"hax_fix_going_through_ground"},{"offset":90,"comment":"hax_fix_going_through_ground has to be set, if set will lift the body upwards if it is inside sand","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"hax_fix_going_through_sand"},{"offset":91,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"hax_wait_till_pixel_scenes_loaded"},{"offset":92,"comment":"if the entity has multiple physics bodies and has specific shapes for those and possible joints, you should use this. 0 is default for shapes","example_range_min":0,"example_range_max":1000,"kind":"Members","default_value":"0","size":4,"raw_type":"int","type":"int","name":"uid"},{"offset":96,"comment":"Use this to kill the physics body of. if is_enabled is set to false, will destroy the physics body","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"is_enabled"},{"offset":100,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"linear_damping"},{"offset":104,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0","size":4,"raw_type":"float","type":"float","name":"angular_damping"},{"offset":108,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"allow_sleep"},{"offset":109,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"fixed_rotation"},{"offset":112,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"0.7","size":4,"raw_type":"float","type":"float","name":"buoyancy"},{"offset":116,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"1","size":4,"raw_type":"float","type":"float","name":"gravity_scale_if_has_no_image_shapes"},{"offset":120,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"is_bullet"},{"offset":121,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"is_static"},{"offset":122,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"is_kinematic"},{"offset":123,"comment":"if it is a character, then we need to few interesting things from time to time","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"is_character"},{"offset":124,"comment":"if set, will go through sand PhysicsBridge::mGoThroughSand = 1","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"go_through_sand"},{"offset":125,"comment":"default is 1. You should only change this if you know the body isn't going to touch gridworld","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"gridworld_box2d"},{"offset":126,"comment":"if set, the simulation might destroy this body if it's hidden under sand. Problematic if you have a small piece with joint attached to something like the wheels of minecart. Set to 0 in cases like that","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"auto_clean"},{"offset":127,"comment":"if set, will leave the b2body into the world, even if the entity is killed","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_death_leave_physics_body"},{"offset":128,"comment":"camera bound... god damn... we need something special when we want to leave the body","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"on_death_really_leave_body"},{"offset":129,"comment":"WARNING! Don't touch this unless you know what you're doing. If false, doesn't update the entitys transform to match the physics body. This is used with multi body entities, to use the correct body to update the entity, e.g. minecart","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"update_entity_transform"},{"offset":130,"comment":"if 1, we will mark our predicted aabb as a box2d update area.","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"force_add_update_areas"},{"offset":131,"comment":"if set, will kill the entity when physics body is destroyed","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"true","size":1,"raw_type":"bool","type":"bool","name":"kills_entity"},{"offset":132,"comment":"for physics projectiles, if true will initially rotate the body based on the velocity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"projectiles_rotate_toward_velocity"},{"offset":136,"comment":"if you want a velocity at the start, set it here","example_range_min":0,"example_range_max":1,"kind":"Custom data types","default_value":"(0, 0)","size":8,"raw_type":"vec2","type":"vec2","name":"initial_velocity"},{"offset":144,"comment":"randomizes the init velocity","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"randomize_init_velocity"},{"offset":145,"comment":"private variable, please don't mess around with this","example_range_min":0,"example_range_max":1,"kind":"Members","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mActiveState"},{"offset":148,"comment":"if set, tracks the number of csolidcells the body has","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"0","size":4,"raw_type":"int","type":"int","name":"mPixelCount"},{"offset":152,"comment":"","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"","size":16,"raw_type":"b2Vec2","type":"b2Vec2","name":"mLocalPosition"},{"offset":168,"comment":"this is sure the bodies are only parsed once","example_range_min":0,"example_range_max":1,"kind":"Privates","default_value":"false","size":1,"raw_type":"bool","type":"bool","name":"mRefreshed"}]}